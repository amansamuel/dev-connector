{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aman\\\\Desktop\\\\Dev-connector\\\\client\\\\src\\\\components\\\\auth\\\\Register.js\";\nimport React, { Component } from 'react';\nimport propsTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { registerUser } from '../../actions/authAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n      password2: '',\n      errors: ''\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push('dashboard');\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newUser = {\n      name: this.state.name,\n      email: this.state.email,\n      password: this.state.password,\n      password2: this.state.password2\n    };\n    this.props.registerUser(newUser, this.props.history); // axios.post('/api/users/register', newUser)\n    //       .then(res =>console.log(res.data))\n    //         .catch(err =>this.setState({errors:err.response.data}))\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-8 m-auto\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"display-4 text-center\",\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"lead text-center\",\n              children: \"Create your DevConnector account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: this.onSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [console.log(errors.mapstateToprops()), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: classnames('form-control form-control-lg', {\n                    'is-invalid': errors.name\n                  }),\n                  placeholder: \"Name\",\n                  name: \"name\",\n                  value: this.state.name,\n                  onChange: this.onChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 23\n                }, this), errors.name && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"invalid-feedback\",\n                  children: [\" \", errors.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 42\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"email\",\n                  className: \"form-control form-control-lg\",\n                  placeholder: \"Email Address\",\n                  name: \"email\",\n                  value: this.state.email,\n                  onChange: this.onChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  classNameName: \"form-text text-muted\",\n                  children: \"This site uses Gravatar so if you want a profile image, use a Gravatar email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  className: \"form-control form-control-lg\",\n                  placeholder: \"Password\",\n                  name: \"password\",\n                  value: this.state.password,\n                  onChange: this.onChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  className: \"form-control form-control-lg\",\n                  placeholder: \"Confirm Password\",\n                  name: \"password2\",\n                  value: this.state.password2,\n                  onChange: this.onChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"submit\",\n                className: \"btn btn-info btn-block mt-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nRegister.propsTypes = {\n  registerUser: propsTypes.func.isRequired,\n  auth: propsTypes.object.isRequired,\n  errors: propsTypes.object.isRequired\n};\n\nconst mapstateToprops = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapstateToprops, {\n  registerUser\n})(withRouter(Register));","map":{"version":3,"sources":["C:/Users/aman/Desktop/Dev-connector/client/src/components/auth/Register.js"],"names":["React","Component","propsTypes","classnames","connect","withRouter","registerUser","Register","constructor","state","name","email","password","password2","errors","onChange","bind","onSubmit","componentDidMount","props","auth","isAuthenticated","history","push","componentWillReceiveProps","nextProps","setState","event","target","value","e","preventDefault","newUser","render","console","log","mapstateToprops","func","isRequired","object"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport propsTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\nimport {connect } from 'react-redux';\r\nimport {withRouter} from 'react-router-dom'\r\nimport {registerUser} from '../../actions/authAction';\r\n class Register extends Component {\r\n\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            name:'',\r\n            email:'',\r\n            password:'',\r\n            password2:'',\r\n            errors:'',\r\n        }\r\n        this.onChange =this.onChange.bind(this);\r\n        this.onSubmit =this.onSubmit.bind(this);\r\n    }\r\n    componentDidMount() {\r\n      if(this.props.auth.isAuthenticated) {\r\n        this.props.history.push('dashboard');\r\n      }\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n      if(nextProps.errors) {\r\n        this.setState({errors:nextProps.errors})\r\n      }\r\n    }\r\n    onChange(event) {\r\n        this.setState({[event.target.name] : event.target.value})\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const newUser ={\r\n            name:this.state.name,\r\n            email:this.state.email,\r\n            password:this.state.password,\r\n            password2:this.state.password2\r\n        }\r\n        this.props.registerUser(newUser, this.props.history)\r\n        // axios.post('/api/users/register', newUser)\r\n        //       .then(res =>console.log(res.data))\r\n        //         .catch(err =>this.setState({errors:err.response.data}))\r\n    }\r\n    render() {\r\n      const {errors} =this.state;\r\n      \r\n        return (\r\n         \r\n            <div className=\"register\">\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-8 m-auto\">\r\n                  <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n                  <p className=\"lead text-center\">Create your DevConnector account</p>\r\n                  <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                      {console.log(errors.mapstateToprops())}\r\n                      <input type=\"text\" className={classnames('form-control form-control-lg',{'is-invalid':errors.name})}\r\n                       placeholder=\"Name\" name=\"name\" value={this.state.name} onChange={this.onChange}/>\r\n                       {errors.name &&  (<div className=\"invalid-feedback\"> {errors.name}</div>)}\r\n                       \r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <input type=\"email\" className=\"form-control form-control-lg\" \r\n                      placeholder=\"Email Address\" name=\"email\" \r\n                      value={this.state.email}\r\n                      onChange={this.onChange} />\r\n                      <small classNameName=\"form-text text-muted\">This site uses Gravatar so if you want a profile image, use a Gravatar email</small>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <input type=\"password\" className=\"form-control form-control-lg\"\r\n                       placeholder=\"Password\" name=\"password\" value={this.state.password}\r\n                       onChange={this.onChange} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <input type=\"password\" className=\"form-control form-control-lg\"\r\n                       placeholder=\"Confirm Password\" name=\"password2\" value={this.state.password2}\r\n                       onChange={this.onChange}/>\r\n                    </div>\r\n                    <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        \r\n        )\r\n    }\r\n}\r\n\r\nRegister.propsTypes = {\r\n  registerUser:propsTypes.func.isRequired,\r\n  auth:propsTypes.object.isRequired,\r\n  errors:propsTypes.object.isRequired\r\n}\r\n\r\nconst mapstateToprops =(state) =>({\r\n  auth:state.auth,\r\n  errors:state.errors\r\n})\r\n\r\nexport default connect(mapstateToprops, {registerUser})(withRouter(Register));"]},"metadata":{},"sourceType":"module"}