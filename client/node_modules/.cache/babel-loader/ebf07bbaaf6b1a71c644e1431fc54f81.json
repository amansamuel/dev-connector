{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aman\\\\Desktop\\\\Dev-connector\\\\client\\\\src\\\\components\\\\common\\\\TextAreaGroup.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TextAreaGroup = ({\n  name,\n  placeholder,\n  value,\n  error,\n  info,\n  onChange\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-group\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: classnames('form-control form-control-lg', {\n        'is-invalid': error\n      }),\n      placeholder: placeholder,\n      name: name,\n      value: value,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), info && /*#__PURE__*/_jsxDEV(\"small\", {\n      className: \"form-text text-muted\",\n      children: info\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 22\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid-feedback\",\n      children: [error, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\n_c = TextAreaGroup;\nTextAreaGroup.prototype = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  value: PropTypes.string.isRequired,\n  info: PropTypes.string,\n  error: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n};\nexport default TextAreaGroup;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextAreaGroup\");","map":{"version":3,"sources":["C:/Users/aman/Desktop/Dev-connector/client/src/components/common/TextAreaGroup.js"],"names":["React","PropTypes","classnames","TextAreaGroup","name","placeholder","value","error","info","onChange","prototype","string","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;;AACC,MAAMC,aAAa,GAAG,CAAC;AACnBC,EAAAA,IADmB;AAEnBC,EAAAA,WAFmB;AAGnBC,EAAAA,KAHmB;AAInBC,EAAAA,KAJmB;AAKnBC,EAAAA,IALmB;AAMnBC,EAAAA;AANmB,CAAD,KAOhB;AACH,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACI;AAAW,MAAA,SAAS,EAAEP,UAAU,CAAC,8BAAD,EAAgC;AAChE,sBAAcK;AADkD,OAAhC,CAAhC;AAGA,MAAA,WAAW,EAAEF,WAHb;AAG0B,MAAA,IAAI,EAAED,IAHhC;AAGsC,MAAA,KAAK,EAAEE,KAH7C;AAGoD,MAAA,QAAQ,EAAEG;AAH9D;AAAA;AAAA;AAAA;AAAA,YADJ,EAKKD,IAAI,iBAAI;AAAO,MAAA,SAAS,EAAC,sBAAjB;AAAA,gBAAyCA;AAAzC;AAAA;AAAA;AAAA;AAAA,YALb,EAMKD,KAAK,iBACN;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,iBAAmCA,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAnBA;;KAAMJ,a;AAoBPA,aAAa,CAACO,SAAd,GAAwB;AACvBN,EAAAA,IAAI,EAACH,SAAS,CAACU,MAAV,CAAiBC,UADC;AAEvBP,EAAAA,WAAW,EAACJ,SAAS,CAACU,MAFC;AAGvBL,EAAAA,KAAK,EAACL,SAAS,CAACU,MAAV,CAAiBC,UAHA;AAIvBJ,EAAAA,IAAI,EAACP,SAAS,CAACU,MAJQ;AAKvBJ,EAAAA,KAAK,EAACN,SAAS,CAACU,MAAV,CAAiBC,UALA;AAMvBH,EAAAA,QAAQ,EAACR,SAAS,CAACY,IAAV,CAAeD;AAND,CAAxB;AAWA,eAAeT,aAAf","sourcesContent":["import React from 'react'\r\nimport PropTypes from'prop-types'\r\nimport classnames from 'classnames';\r\n const TextAreaGroup = ({\r\n     name,\r\n     placeholder,\r\n     value,\r\n     error,\r\n     info,\r\n     onChange\r\n }) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <textarea  className={classnames('form-control form-control-lg',{\r\n            'is-invalid' :error\r\n            })} \r\n            placeholder={placeholder} name={name} value={value} onChange={onChange} />\r\n            {info && <small className=\"form-text text-muted\">{info}</small>}\r\n            {error && \r\n            <div className='invalid-feedback'>{error} </div>}\r\n      </div>\r\n    )\r\n}\r\nTextAreaGroup.prototype={\r\n name:PropTypes.string.isRequired,\r\n placeholder:PropTypes.string,\r\n value:PropTypes.string.isRequired,\r\n info:PropTypes.string,\r\n error:PropTypes.string.isRequired,\r\n onChange:PropTypes.func.isRequired\r\n\r\n}\r\n\r\n\r\nexport default TextAreaGroup;"]},"metadata":{},"sourceType":"module"}