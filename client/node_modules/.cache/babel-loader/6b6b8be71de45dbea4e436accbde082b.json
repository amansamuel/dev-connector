{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aman\\\\Desktop\\\\Dev-connector\\\\client\\\\src\\\\components\\\\auth\\\\Login.js\";\nimport React, { Component } from 'react';\nimport propsTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport { loginUser } from '../../actions/authAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      password: '',\n      errors: ''\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  componentDidMount() {\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push('das');\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push('/dashboard');\n    }\n\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n    const user = {\n      email: this.state.email,\n      password: this.state.password\n    };\n    this.props.loginUser(user);\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-8 m-auto\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"display-4 text-center\",\n              children: \"Log In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"lead text-center\",\n              children: \"Sign in to your DevConnector account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: this.onSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"email\",\n                  className: classnames('form-control form-control-lg', {\n                    'is-invalid': errors.email\n                  }),\n                  placeholder: \"Email Address\",\n                  name: \"email\",\n                  value: this.state.email,\n                  onChange: this.onChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 15\n                }, this), errors.email && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"invalid-feedback\",\n                  children: [errors.email, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  className: classnames('form-control form-control-lg', {\n                    'is-invalid': errors.password\n                  }),\n                  placeholder: \"Password\",\n                  name: \"password\",\n                  value: this.state.password,\n                  onChange: this.onChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 15\n                }, this), errors.password && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"invalid-feedback\",\n                  children: [errors.password, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"submit\",\n                className: \"btn btn-info btn-block mt-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nLogin.propTypes = {\n  loginuser: propsTypes.func.isRequired,\n  auth: propsTypes.object.isRequired,\n  errors: propsTypes.object.isRequired\n};\n\nconst mapStateToprops = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToprops, {\n  loginUser\n})(Login);","map":{"version":3,"sources":["C:/Users/aman/Desktop/Dev-connector/client/src/components/auth/Login.js"],"names":["React","Component","propsTypes","connect","classnames","loginUser","Login","constructor","state","email","password","errors","onChange","bind","onSubmit","event","setState","target","name","value","componentDidMount","props","auth","isAuthenticated","history","push","componentWillReceiveProps","nextProps","preventDefault","user","render","propTypes","loginuser","func","isRequired","object","mapStateToprops"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAAQC,SAAR,QAAwB,0BAAxB;;;AACC,MAAMC,KAAN,SAAoBL,SAApB,CAA8B;AAG3BM,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAW;AACPC,MAAAA,KAAK,EAAC,EADC;AAEPC,MAAAA,QAAQ,EAAC,EAFF;AAGPC,MAAAA,MAAM,EAAC;AAHA,KAAX;AAKA,SAAKC,QAAL,GAAe,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAf;AACA,SAAKC,QAAL,GAAc,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAAd;AACH;;AAEDD,EAAAA,QAAQ,CAACG,KAAD,EAAQ;AACZ,SAAKC,QAAL,CAAc;AAAC,OAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBH,KAAK,CAACE,MAAN,CAAaE;AAAnC,KAAd;AACH;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,QAAG,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,eAAnB,EAAoC;AAClC,WAAKF,KAAL,CAAWG,OAAX,CAAmBC,IAAnB,CAAwB,KAAxB;AACD;AACF;;AAKDC,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AAEnC,QAAGA,SAAS,CAACL,IAAV,CAAeC,eAAlB,EAAmC;AACjC,WAAKF,KAAL,CAAWG,OAAX,CAAmBC,IAAnB,CAAwB,YAAxB;AACD;;AAED,QAAGE,SAAS,CAAChB,MAAb,EAAqB;AACnB,WAAKK,QAAL,CAAc;AAACL,QAAAA,MAAM,EAACgB,SAAS,CAAChB;AAAlB,OAAd;AACD;AACF;;AACDG,EAAAA,QAAQ,CAACC,KAAD,EAAQ;AAEZA,IAAAA,KAAK,CAACa,cAAN;AACA,UAAMC,IAAI,GAAC;AACPpB,MAAAA,KAAK,EAAC,KAAKD,KAAL,CAAWC,KADV;AAEPC,MAAAA,QAAQ,EAAC,KAAKF,KAAL,CAAWE;AAFb,KAAX;AAIA,SAAKW,KAAL,CAAWhB,SAAX,CAAqBwB,IAArB;AACH;;AAEDC,EAAAA,MAAM,GAAG;AAEP,UAAM;AAACnB,MAAAA;AAAD,QAAU,KAAKH,KAArB;AAEE,wBACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,6BACR;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,iBAAf;AAAA,oCACE;AAAI,cAAA,SAAS,EAAC,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAG,cAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAM,cAAA,QAAQ,EAAE,KAAKM,QAArB;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,wCACE;AAAO,kBAAA,IAAI,EAAC,OAAZ;AAAoB,kBAAA,SAAS,EAAEV,UAAU,CAAC,8BAAD,EAAgC;AACvE,kCAAcO,MAAM,CAACF;AADkD,mBAAhC,CAAzC;AAGA,kBAAA,WAAW,EAAC,eAHZ;AAG4B,kBAAA,IAAI,EAAC,OAHjC;AAGyC,kBAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAH3D;AAGkE,kBAAA,QAAQ,EAAE,KAAKG;AAHjF;AAAA;AAAA;AAAA;AAAA,wBADF,EAKGD,MAAM,CAACF,KAAP,iBACD;AAAK,kBAAA,SAAS,EAAC,kBAAf;AAAA,6BAAmCE,MAAM,CAACF,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,wBANF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eASE;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,wCACE;AAAO,kBAAA,IAAI,EAAC,UAAZ;AAAuB,kBAAA,SAAS,EAAEL,UAAU,CAAC,8BAAD,EAAgC;AAC1E,kCAAcO,MAAM,CAACD;AADqD,mBAAhC,CAA5C;AAGC,kBAAA,WAAW,EAAC,UAHb;AAGwB,kBAAA,IAAI,EAAC,UAH7B;AAGyC,kBAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE,QAH3D;AAGqE,kBAAA,QAAQ,EAAE,KAAKE;AAHpF;AAAA;AAAA;AAAA;AAAA,wBADF,EAKKD,MAAM,CAACD,QAAP,iBACH;AAAK,kBAAA,SAAS,EAAC,kBAAf;AAAA,6BAAmCC,MAAM,CAACD,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,wBANF;AAAA;AAAA;AAAA;AAAA;AAAA,sBATF,eAiBE;AAAO,gBAAA,IAAI,EAAC,QAAZ;AAAqB,gBAAA,SAAS,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,sBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADQ;AAAA;AAAA;AAAA;AAAA,YADJ;AA+BH;;AAjF0B;;AAoF/BJ,KAAK,CAACyB,SAAN,GAAiB;AACfC,EAAAA,SAAS,EAAC9B,UAAU,CAAC+B,IAAX,CAAgBC,UADX;AAEfZ,EAAAA,IAAI,EAACpB,UAAU,CAACiC,MAAX,CAAkBD,UAFR;AAGfvB,EAAAA,MAAM,EAACT,UAAU,CAACiC,MAAX,CAAkBD;AAHV,CAAjB;;AAOA,MAAME,eAAe,GAAG5B,KAAD,KAAY;AACjCc,EAAAA,IAAI,EAACd,KAAK,CAACc,IADsB;AAEjCX,EAAAA,MAAM,EAACH,KAAK,CAACG;AAFoB,CAAZ,CAAvB;;AAKA,eAAeR,OAAO,CAACiC,eAAD,EAAkB;AAAC/B,EAAAA;AAAD,CAAlB,CAAP,CAAsCC,KAAtC,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport propsTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport classnames from 'classnames';\r\nimport {loginUser} from '../../actions/authAction';\r\n class Login extends Component {\r\n\r\n\r\n    constructor() {\r\n        super();\r\n        this.state={\r\n            email:'',\r\n            password:'',\r\n            errors:''\r\n        }\r\n        this.onChange =this.onChange.bind(this);\r\n        this.onSubmit=this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange(event) {\r\n        this.setState({[event.target.name] :event.target.value})\r\n    } \r\n    componentDidMount() {\r\n      if(this.props.auth.isAuthenticated) {\r\n        this.props.history.push('das')\r\n      }\r\n    }\r\n\r\n\r\n\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n\r\n      if(nextProps.auth.isAuthenticated) {\r\n        this.props.history.push('/dashboard')\r\n      }\r\n\r\n      if(nextProps.errors) {\r\n        this.setState({errors:nextProps.errors})\r\n      }\r\n    }\r\n    onSubmit(event) {\r\n\r\n        event.preventDefault();\r\n        const user={\r\n            email:this.state.email,\r\n            password:this.state.password\r\n        }\r\n        this.props.loginUser(user)\r\n    }\r\n\r\n    render() {\r\n\r\n      const {errors} =this.state;\r\n\r\n        return (\r\n            <div className=\"login\">\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-8 m-auto\">\r\n          <h1 className=\"display-4 text-center\">Log In</h1>\r\n          <p className=\"lead text-center\">Sign in to your DevConnector account</p>\r\n          <form onSubmit={this.onSubmit}>\r\n            <div className=\"form-group\">\r\n              <input type=\"email\" className={classnames('form-control form-control-lg',{\r\n                'is-invalid' :errors.email\r\n              })} \r\n              placeholder=\"Email Address\" name=\"email\" value={this.state.email} onChange={this.onChange} />\r\n              {errors.email && \r\n              <div className='invalid-feedback'>{errors.email} </div>}\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input type=\"password\" className={classnames('form-control form-control-lg',{\r\n                'is-invalid' :errors.password\r\n              })} \r\n               placeholder=\"Password\" name=\"password\"  value={this.state.password} onChange={this.onChange}/>\r\n                {errors.password && \r\n              <div className='invalid-feedback'>{errors.password} </div>}\r\n            </div>\r\n            <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n        )\r\n    }\r\n}\r\n\r\nLogin.propTypes ={\r\n  loginuser:propsTypes.func.isRequired,\r\n  auth:propsTypes.object.isRequired,\r\n  errors:propsTypes.object.isRequired\r\n}\r\n\r\n\r\nconst mapStateToprops =(state) => ({\r\n  auth:state.auth,\r\n  errors:state.errors\r\n})\r\n\r\nexport default connect(mapStateToprops, {loginUser})(Login);"]},"metadata":{},"sourceType":"module"}