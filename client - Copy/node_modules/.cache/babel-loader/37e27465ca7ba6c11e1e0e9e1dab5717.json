{"ast":null,"code":"import _defineProperty from\"C:/Users/aman/Desktop/Dev-connector/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"C:/Users/aman/Desktop/Dev-connector/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/aman/Desktop/Dev-connector/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"C:/Users/aman/Desktop/Dev-connector/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:/Users/aman/Desktop/Dev-connector/client/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/aman/Desktop/Dev-connector/client/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import propsTypes from'prop-types';import{connect}from'react-redux';import{withRouter}from'react-router-dom';import{registerUser}from'../../actions/authAction';import TextFieldGroup from'../common/TextFieldGroup';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Register=/*#__PURE__*/function(_Component){_inherits(Register,_Component);var _super=_createSuper(Register);function Register(){var _this;_classCallCheck(this,Register);_this=_super.call(this);_this.state={name:'',email:'',password:'',password2:'',errors:''};_this.onChange=_this.onChange.bind(_assertThisInitialized(_this));_this.onSubmit=_this.onSubmit.bind(_assertThisInitialized(_this));return _this;}_createClass(Register,[{key:\"componentDidMount\",value:function componentDidMount(){if(this.props.auth.isAuthenticated){this.props.history.push('dashboard');}}},{key:\"componentWillReceiveProps\",value:function componentWillReceiveProps(nextProps){if(nextProps.errors){this.setState({errors:nextProps.errors.errors});}}},{key:\"onChange\",value:function onChange(event){this.setState(_defineProperty({},event.target.name,event.target.value));}},{key:\"onSubmit\",value:function onSubmit(e){e.preventDefault();var newUser={name:this.state.name,email:this.state.email,password:this.state.password,password2:this.state.password2};this.props.registerUser(newUser,this.props.history);// axios.post('/api/users/register', newUser)\n//       .then(res =>console.log(res.data))\n//         .catch(err =>this.setState({errors:err.response.data}))\n}},{key:\"render\",value:function render(){var errors=this.state.errors;return/*#__PURE__*/_jsx(\"div\",{className:\"register\",children:/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-8 m-auto\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"display-4 text-center\",children:\"Sign Up\"}),/*#__PURE__*/_jsx(\"p\",{className:\"lead text-center\",children:\"Create your DevConnector account\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:this.onSubmit,children:[/*#__PURE__*/_jsx(TextFieldGroup,{type:\"text\",errors:errors.name,name:\"name\",placeholder:\"Name\",value:this.state.name,onChange:this.onChange}),/*#__PURE__*/_jsx(TextFieldGroup,{type:\"email\",errors:errors.email,name:\"email\",placeholder:\"Email Address\",value:this.state.email,onChange:this.onChange,info:\"This site uses Gravatar so if you want a profile image, use a Gravatar email\"}),/*#__PURE__*/_jsx(TextFieldGroup,{type:\"password\",errors:errors.password,placeholder:\"Password\",name:\"password\",value:this.state.password,onChange:this.onChange}),/*#__PURE__*/_jsx(TextFieldGroup,{type:\"password\",errors:errors.password2,placeholder:\"Confirm Password\",name:\"password2\",value:this.state.password2,onChange:this.onChange}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\",className:\"btn btn-info btn-block mt-4\"})]})]})})})});}}]);return Register;}(Component);Register.propsTypes={registerUser:propsTypes.func.isRequired,auth:propsTypes.object.isRequired,errors:propsTypes.object.isRequired};var mapstateToprops=function mapstateToprops(state){return{auth:state.auth,errors:state.errors};};export default connect(mapstateToprops,{registerUser:registerUser})(withRouter(Register));","map":{"version":3,"sources":["C:/Users/aman/Desktop/Dev-connector/client/src/components/auth/Register.js"],"names":["React","Component","propsTypes","connect","withRouter","registerUser","TextFieldGroup","Register","state","name","email","password","password2","errors","onChange","bind","onSubmit","props","auth","isAuthenticated","history","push","nextProps","setState","event","target","value","e","preventDefault","newUser","func","isRequired","object","mapstateToprops"],"mappings":"gvBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA,OAAQC,OAAR,KAAuB,aAAvB,CACA,OAAQC,UAAR,KAAyB,kBAAzB,CACA,OAAQC,YAAR,KAA2B,0BAA3B,CACA,MAAOC,CAAAA,cAAP,KAA2B,0BAA3B,C,2FACOC,CAAAA,Q,oGAGH,mBAAc,0CACV,wBACA,MAAKC,KAAL,CAAa,CACTC,IAAI,CAAC,EADI,CAETC,KAAK,CAAC,EAFG,CAGTC,QAAQ,CAAC,EAHA,CAITC,SAAS,CAAC,EAJD,CAKTC,MAAM,CAAC,EALE,CAAb,CAOA,MAAKC,QAAL,CAAe,MAAKA,QAAL,CAAcC,IAAd,+BAAf,CACA,MAAKC,QAAL,CAAe,MAAKA,QAAL,CAAcD,IAAd,+BAAf,CAVU,aAWb,C,sDACD,4BAAoB,CAClB,GAAG,KAAKE,KAAL,CAAWC,IAAX,CAAgBC,eAAnB,CAAoC,CAClC,KAAKF,KAAL,CAAWG,OAAX,CAAmBC,IAAnB,CAAwB,WAAxB,EACD,CACF,C,yCACD,mCAA0BC,SAA1B,CAAqC,CACnC,GAAGA,SAAS,CAACT,MAAb,CAAqB,CACnB,KAAKU,QAAL,CAAc,CAACV,MAAM,CAACS,SAAS,CAACT,MAAV,CAAiBA,MAAzB,CAAd,EACD,CACF,C,wBACD,kBAASW,KAAT,CAAgB,CACZ,KAAKD,QAAL,oBAAgBC,KAAK,CAACC,MAAN,CAAahB,IAA7B,CAAqCe,KAAK,CAACC,MAAN,CAAaC,KAAlD,GACH,C,wBACD,kBAASC,CAAT,CAAY,CACRA,CAAC,CAACC,cAAF,GACA,GAAMC,CAAAA,OAAO,CAAE,CACXpB,IAAI,CAAC,KAAKD,KAAL,CAAWC,IADL,CAEXC,KAAK,CAAC,KAAKF,KAAL,CAAWE,KAFN,CAGXC,QAAQ,CAAC,KAAKH,KAAL,CAAWG,QAHT,CAIXC,SAAS,CAAC,KAAKJ,KAAL,CAAWI,SAJV,CAAf,CAMA,KAAKK,KAAL,CAAWZ,YAAX,CAAwBwB,OAAxB,CAAiC,KAAKZ,KAAL,CAAWG,OAA5C,EACA;AACA;AACA;AACH,C,sBACD,iBAAS,CACP,GAAOP,CAAAA,MAAP,CAAgB,KAAKL,KAArB,CAAOK,MAAP,CAEE,mBAEI,YAAK,SAAS,CAAC,UAAf,uBACA,YAAK,SAAS,CAAC,WAAf,uBACE,YAAK,SAAS,CAAC,KAAf,uBAEE,aAAK,SAAS,CAAC,iBAAf,wBACE,WAAI,SAAS,CAAC,uBAAd,qBADF,cAEE,UAAG,SAAS,CAAC,kBAAb,8CAFF,cAGE,cAAM,QAAQ,CAAE,KAAKG,QAArB,wBAEE,KAAC,cAAD,EAAgB,IAAI,CAAC,MAArB,CACA,MAAM,CAAEH,MAAM,CAACJ,IADf,CAEA,IAAI,CAAC,MAFL,CAGA,WAAW,CAAC,MAHZ,CAIA,KAAK,CAAE,KAAKD,KAAL,CAAWC,IAJlB,CAKA,QAAQ,CAAE,KAAKK,QALf,EAFF,cAUE,KAAC,cAAD,EACA,IAAI,CAAC,OADL,CAEA,MAAM,CAAED,MAAM,CAACH,KAFf,CAGA,IAAI,CAAC,OAHL,CAIA,WAAW,CAAC,eAJZ,CAKA,KAAK,CAAE,KAAKF,KAAL,CAAWE,KALlB,CAMA,QAAQ,CAAE,KAAKI,QANf,CAOA,IAAI,CAAC,8EAPL,EAVF,cAoBE,KAAC,cAAD,EACA,IAAI,CAAC,UADL,CAEA,MAAM,CAAED,MAAM,CAACF,QAFf,CAGA,WAAW,CAAC,UAHZ,CAIA,IAAI,CAAC,UAJL,CAKA,KAAK,CAAE,KAAKH,KAAL,CAAWG,QALlB,CAMA,QAAQ,CAAE,KAAKG,QANf,EApBF,cA6BE,KAAC,cAAD,EACA,IAAI,CAAC,UADL,CAEA,MAAM,CAAED,MAAM,CAACD,SAFf,CAGA,WAAW,CAAC,kBAHZ,CAIA,IAAI,CAAC,WAJL,CAKA,KAAK,CAAE,KAAKJ,KAAL,CAAWI,SALlB,CAMA,QAAQ,CAAE,KAAKE,QANf,EA7BF,cAsCE,cAAO,IAAI,CAAC,QAAZ,CAAqB,SAAS,CAAC,6BAA/B,EAtCF,GAHF,GAFF,EADF,EADA,EAFJ,CAuDH,C,sBAnGmBb,S,EAsGxBM,QAAQ,CAACL,UAAT,CAAsB,CACpBG,YAAY,CAACH,UAAU,CAAC4B,IAAX,CAAgBC,UADT,CAEpBb,IAAI,CAAChB,UAAU,CAAC8B,MAAX,CAAkBD,UAFH,CAGpBlB,MAAM,CAACX,UAAU,CAAC8B,MAAX,CAAkBD,UAHL,CAAtB,CAMA,GAAME,CAAAA,eAAe,CAAE,QAAjBA,CAAAA,eAAiB,CAACzB,KAAD,QAAW,CAChCU,IAAI,CAACV,KAAK,CAACU,IADqB,CAEhCL,MAAM,CAACL,KAAK,CAACK,MAFmB,CAAX,EAAvB,CAKA,cAAeV,CAAAA,OAAO,CAAC8B,eAAD,CAAkB,CAAC5B,YAAY,CAAZA,YAAD,CAAlB,CAAP,CAAyCD,UAAU,CAACG,QAAD,CAAnD,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport propsTypes from 'prop-types';\r\nimport {connect } from 'react-redux';\r\nimport {withRouter} from 'react-router-dom'\r\nimport {registerUser} from '../../actions/authAction';\r\nimport TextFieldGroup from '../common/TextFieldGroup';\r\n class Register extends Component {\r\n\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            name:'',\r\n            email:'',\r\n            password:'',\r\n            password2:'',\r\n            errors:'',\r\n        }\r\n        this.onChange =this.onChange.bind(this);\r\n        this.onSubmit =this.onSubmit.bind(this);\r\n    }\r\n    componentDidMount() {\r\n      if(this.props.auth.isAuthenticated) {\r\n        this.props.history.push('dashboard');\r\n      }\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n      if(nextProps.errors) {\r\n        this.setState({errors:nextProps.errors.errors})\r\n      }\r\n    }\r\n    onChange(event) {\r\n        this.setState({[event.target.name] : event.target.value})\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const newUser ={\r\n            name:this.state.name,\r\n            email:this.state.email,\r\n            password:this.state.password,\r\n            password2:this.state.password2\r\n        }\r\n        this.props.registerUser(newUser, this.props.history)\r\n        // axios.post('/api/users/register', newUser)\r\n        //       .then(res =>console.log(res.data))\r\n        //         .catch(err =>this.setState({errors:err.response.data}))\r\n    }\r\n    render() {\r\n      const {errors} =this.state;\r\n      \r\n        return (\r\n         \r\n            <div className=\"register\">\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                \r\n                <div className=\"col-md-8 m-auto\">\r\n                  <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n                  <p className=\"lead text-center\">Create your DevConnector account</p>\r\n                  <form onSubmit={this.onSubmit}>\r\n                   \r\n                    <TextFieldGroup type=\"text\"\r\n                    errors={errors.name}\r\n                    name=\"name\"\r\n                    placeholder=\"Name\"\r\n                    value={this.state.name}\r\n                    onChange={this.onChange}\r\n\r\n                    />\r\n                    <TextFieldGroup \r\n                    type=\"email\"\r\n                    errors={errors.email}\r\n                    name=\"email\"\r\n                    placeholder=\"Email Address\"\r\n                    value={this.state.email}\r\n                    onChange={this.onChange}\r\n                    info=\"This site uses Gravatar so if you want a profile image, use a Gravatar email\"\r\n                    />\r\n                   \r\n                    <TextFieldGroup \r\n                    type=\"password\"\r\n                    errors={errors.password}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                    />\r\n\r\n                    <TextFieldGroup \r\n                    type=\"password\"\r\n                    errors={errors.password2}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"password2\"\r\n                    value={this.state.password2}\r\n                    onChange={this.onChange}\r\n                    />\r\n                   \r\n                    <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        \r\n        )\r\n    }\r\n}\r\n\r\nRegister.propsTypes = {\r\n  registerUser:propsTypes.func.isRequired,\r\n  auth:propsTypes.object.isRequired,\r\n  errors:propsTypes.object.isRequired\r\n}\r\n\r\nconst mapstateToprops =(state) =>({\r\n  auth:state.auth,\r\n  errors:state.errors\r\n})\r\n\r\nexport default connect(mapstateToprops, {registerUser})(withRouter(Register));"]},"metadata":{},"sourceType":"module"}