{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aman\\\\Desktop\\\\Dev-connector\\\\client\\\\src\\\\components\\\\post\\\\Post.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getPost } from '../../actions/postAction';\nimport Spinner from '../common/Spinner';\nimport PostItem from './PostItem';\nimport { Link } from 'react-router-dom';\nimport AddComment from './AddComment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Post extends Component {\n  componentDidMount() {\n    this.props.getPost(this.props.match.params.id);\n  }\n\n  render() {\n    const {\n      loading,\n      post\n    } = this.props.post;\n    let postContent;\n\n    if (post === null || loading || Object.keys(post).length === 0) {\n      postContent = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 26\n      }, this);\n    } else {\n      postContent = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(PostItem, {\n          post: post,\n          showActions: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AddComment, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/feeds\",\n            className: \"btn btn-light\",\n            children: \" Back to feed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this), postContent]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getPost\n})(Post);","map":{"version":3,"sources":["C:/Users/aman/Desktop/Dev-connector/client/src/components/post/Post.js"],"names":["React","Component","PropTypes","connect","getPost","Spinner","PostItem","Link","AddComment","Post","componentDidMount","props","match","params","id","render","loading","post","postContent","Object","keys","length","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,OAAR,QAAsB,0BAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEC,MAAMC,IAAN,SAAmBR,SAAnB,CAA6B;AAE1BS,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWP,OAAX,CAAmB,KAAKO,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA3C;AACH;;AACDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,OAAD;AAASC,MAAAA;AAAT,QAAgB,KAAKN,KAAL,CAAWM,IAAjC;AACA,QAAIC,WAAJ;;AACA,QAAGD,IAAI,KAAI,IAAR,IAAgBD,OAAhB,IAA2BG,MAAM,CAACC,IAAP,CAAYH,IAAZ,EAAkBI,MAAlB,KAA6B,CAA3D,EAA8D;AAC1DH,MAAAA,WAAW,gBAAE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAAb;AACH,KAFD,MAEO;AACHA,MAAAA,WAAW,gBACP;AAAA,gCACI,QAAC,QAAD;AAAU,UAAA,IAAI,EAAED,IAAhB;AAAsB,UAAA,WAAW,EAAE;AAAnC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAMH;;AACD,wBACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCAEI,QAAC,IAAD;AAAO,YAAA,EAAE,EAAC,QAAV;AAAmB,YAAA,SAAS,EAAC,eAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAKKC,WALL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAeH;;AAjCyB;;AAmC9BT,IAAI,CAACa,SAAL,GAAe;AACXlB,EAAAA,OAAO,EAACF,SAAS,CAACqB,IAAV,CAAeC,UADZ;AAEXP,EAAAA,IAAI,EAACf,SAAS,CAACuB,MAAV,CAAiBD;AAFX,CAAf;;AAIA,MAAME,eAAe,GAAEC,KAAD,KAAW;AACjCV,EAAAA,IAAI,EAACU,KAAK,CAACV;AADsB,CAAX,CAAtB;;AAIA,eAAed,OAAO,CAACuB,eAAD,EAAiB;AAACtB,EAAAA;AAAD,CAAjB,CAAP,CAAmCK,IAAnC,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {getPost} from '../../actions/postAction'\r\nimport Spinner from '../common/Spinner';\r\nimport PostItem from './PostItem';\r\nimport {Link} from 'react-router-dom';\r\nimport AddComment from './AddComment';\r\n\r\n class Post extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getPost(this.props.match.params.id)\r\n    }\r\n    render() {\r\n        const {loading,post} =this.props.post;\r\n        let postContent;\r\n        if(post ===null || loading || Object.keys(post).length === 0) {\r\n            postContent =<Spinner />\r\n        } else {\r\n            postContent=(\r\n                <div>\r\n                    <PostItem post={post} showActions={false}/>\r\n                    <AddComment />\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div className=\"post\">\r\n                <div className=\"container\">\r\n                    <div className=\"col-md-12\">\r\n\r\n                        <Link  to=\"/feeds\" className=\"btn btn-light\"> Back to feed\r\n\r\n                        </Link>\r\n                        {postContent}\r\n                    </div>\r\n                   \r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\nPost.propTypes={\r\n    getPost:PropTypes.func.isRequired,\r\n    post:PropTypes.object.isRequired\r\n}\r\nconst mapStateToProps=(state) =>({\r\npost:state.post\r\n})\r\n\r\nexport default connect(mapStateToProps,{getPost})(Post);\r\n"]},"metadata":{},"sourceType":"module"}