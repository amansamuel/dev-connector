{"ast":null,"code":"import _classCallCheck from\"C:/Users/aman/Desktop/Dev-connector/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/aman/Desktop/Dev-connector/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/Users/aman/Desktop/Dev-connector/client/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/aman/Desktop/Dev-connector/client/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{connect}from'react-redux';import Spinner from'../common/Spinner';import ProfileItem from'./ProfilesItem';import{getProfiles}from'../../actions/profileActions';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Profiles=/*#__PURE__*/function(_Component){_inherits(Profiles,_Component);var _super=_createSuper(Profiles);function Profiles(){_classCallCheck(this,Profiles);return _super.apply(this,arguments);}_createClass(Profiles,[{key:\"componentDidMount\",value:function componentDidMount(){this.props.getProfiles();console.log('Component bbbbbbbbb');}},{key:\"render\",value:function render(){var _this$props$profile=this.props.profile,loading=_this$props$profile.loading,profiles=_this$props$profile.profiles;var profileItems;if(profiles===null||loading){profileItems=/*#__PURE__*/_jsx(Spinner,{});}else{if(profiles.length>0){profileItems=profiles.map(function(profile){return/*#__PURE__*/_jsx(ProfileItem,{profile:profile},profile._id);});}else{profileItems=/*#__PURE__*/_jsx(\"h4\",{children:\"No profiles found...\"});}}return/*#__PURE__*/_jsx(\"div\",{className:\"profiles\",children:/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-12\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"display-4 text-center\",children:\"Developer Profiles\"}),/*#__PURE__*/_jsx(\"p\",{className:\"lead text-center\",children:\"Browse and connect with developers\"}),profileItems]})})})});}}]);return Profiles;}(Component);var mapStateToProps=function mapStateToProps(state){return{profile:state.profile};};export default connect(mapStateToProps,{getProfiles:getProfiles})(Profiles);","map":{"version":3,"sources":["C:/Users/aman/Desktop/Dev-connector/client/src/components/profiles/Profiles.js"],"names":["React","Component","connect","Spinner","ProfileItem","getProfiles","Profiles","props","console","log","profile","loading","profiles","profileItems","length","map","_id","mapStateToProps","state"],"mappings":"oeAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,OAAT,KAAwB,aAAxB,CAEA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,MAAOC,CAAAA,WAAP,KAAwB,gBAAxB,CACA,OAASC,WAAT,KAA4B,8BAA5B,C,2FAEMC,CAAAA,Q,kPACJ,4BAAoB,CACjB,KAAKC,KAAL,CAAWF,WAAX,GACDG,OAAO,CAACC,GAAR,CAAY,qBAAZ,EACD,C,sBACD,iBAAS,CACP,wBAA6B,KAAKF,KAAL,CAAWG,OAAxC,CAAQC,OAAR,qBAAQA,OAAR,CAAgBC,QAAhB,qBAAgBA,QAAhB,CACA,GAAIC,CAAAA,YAAJ,CAEA,GAAID,QAAQ,GAAK,IAAb,EAAqBD,OAAzB,CAAkC,CAChCE,YAAY,cAAG,KAAC,OAAD,IAAf,CACD,CAFD,IAEO,CACL,GAAID,QAAQ,CAACE,MAAT,CAAkB,CAAtB,CAAyB,CACvBD,YAAY,CAAGD,QAAQ,CAACG,GAAT,CAAa,SAAAL,OAAO,qBACjC,KAAC,WAAD,EACA,OAAO,CAAEA,OADT,EAAkBA,OAAO,CAACM,GAA1B,CADiC,EAApB,CAAf,CAID,CALD,IAKO,CACLH,YAAY,cAAG,4CAAf,CACD,CACF,CAED,mBACE,YAAK,SAAS,CAAC,UAAf,uBACE,YAAK,SAAS,CAAC,WAAf,uBAEE,YAAK,SAAS,CAAC,KAAf,uBACE,aAAK,SAAS,CAAC,WAAf,wBACE,WAAI,SAAS,CAAC,uBAAd,gCADF,cAEE,UAAG,SAAS,CAAC,kBAAb,gDAFF,CAKGA,YALH,GADF,EAFF,EADF,EADF,CAgBD,C,sBAtCoBZ,S,EA8CvB,GAAMgB,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAChCR,OAAO,CAAEQ,KAAK,CAACR,OADiB,CAAL,EAA7B,CAIA,cAAeR,CAAAA,OAAO,CAACe,eAAD,CAAkB,CAAEZ,WAAW,CAAXA,WAAF,CAAlB,CAAP,CAA0CC,QAA1C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Spinner from '../common/Spinner';\r\nimport ProfileItem from './ProfilesItem';\r\nimport { getProfiles } from '../../actions/profileActions';\r\n\r\nclass Profiles extends Component {\r\n  componentDidMount() {\r\n     this.props.getProfiles();\r\n    console.log('Component bbbbbbbbb');\r\n  }\r\n  render() {\r\n    const { loading,profiles } = this.props.profile;\r\n    let profileItems;\r\n\r\n    if (profiles === null || loading) {\r\n      profileItems = <Spinner />;\r\n    } else {\r\n      if (profiles.length > 0) {\r\n        profileItems = profiles.map(profile => (\r\n          <ProfileItem key={profile._id} \r\n          profile={profile} />\r\n        ));\r\n      } else {\r\n        profileItems = <h4>No profiles found...</h4>;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"profiles\">\r\n        <div className=\"container\">\r\n        \r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4 text-center\">Developer Profiles</h1>\r\n              <p className=\"lead text-center\">\r\n                Browse and connect with developers\r\n              </p>\r\n              {profileItems}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProfiles.propTypes = {\r\n  getProfiles: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfiles })(Profiles);\r\n"]},"metadata":{},"sourceType":"module"}