{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aman\\\\Desktop\\\\Dev-connector\\\\client\\\\src\\\\components\\\\profiles\\\\Profiles.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Spinner from '../common/Spinner';\nimport ProfileItem from './ProfilesItem';\nimport { getProfiles } from '../../actions/profileActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Profiles extends Component {\n  componentDidMount() {\n    this.props.getProfiles();\n  }\n\n  render() {\n    const {\n      loading\n    } = this.props.profile;\n    let profileItems; // if (profiles === null || loading) {\n    //   profileItems = <Spinner />;\n    // } else {\n    //   if (profiles.length > 0) {\n    //     profileItems = profiles.map(profile => (\n    //       <ProfileItem key={profile._id} \n    //       profile={profile} />\n    //     ));\n    //   } else {\n    //     profileItems = <h4>No profiles found...</h4>;\n    //   }\n    // }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profiles\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [console.log(this.props.profile), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-12\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"display-4 text-center\",\n              children: \"Developer Profiles\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"lead text-center\",\n              children: \"Browse and connect with developers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this), profileItems]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nProfiles.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile.profile\n});\n\nexport default connect(mapStateToProps, {\n  getProfiles\n})(Profiles);","map":{"version":3,"sources":["C:/Users/aman/Desktop/Dev-connector/client/src/components/profiles/Profiles.js"],"names":["React","Component","connect","PropTypes","Spinner","ProfileItem","getProfiles","Profiles","componentDidMount","props","render","loading","profile","profileItems","console","log","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,WAAT,QAA4B,8BAA5B;;;AAEA,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AAC/BO,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWH,WAAX;AACD;;AAEDI,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAKF,KAAL,CAAWG,OAA/B;AACA,QAAIC,YAAJ,CAFO,CAIP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,mBACGC,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWG,OAAvB,CADH,eAEE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,oCACE;AAAI,cAAA,SAAS,EAAC,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAG,cAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,EAKGC,YALH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAgBD;;AAtC8B;;AAyCjCN,QAAQ,CAACS,SAAT,GAAqB;AACnBV,EAAAA,WAAW,EAAEH,SAAS,CAACc,IAAV,CAAeC,UADT;AAEnBN,EAAAA,OAAO,EAAET,SAAS,CAACgB,MAAV,CAAiBD;AAFP,CAArB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCT,EAAAA,OAAO,EAAES,KAAK,CAACT,OAAN,CAAcA;AADS,CAAL,CAA7B;;AAIA,eAAeV,OAAO,CAACkB,eAAD,EAAkB;AAAEd,EAAAA;AAAF,CAAlB,CAAP,CAA0CC,QAA1C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Spinner from '../common/Spinner';\r\nimport ProfileItem from './ProfilesItem';\r\nimport { getProfiles } from '../../actions/profileActions';\r\n\r\nclass Profiles extends Component {\r\n  componentDidMount() {\r\n    this.props.getProfiles();\r\n  }\r\n\r\n  render() {\r\n    const { loading } = this.props.profile;\r\n    let profileItems;\r\n\r\n    // if (profiles === null || loading) {\r\n    //   profileItems = <Spinner />;\r\n    // } else {\r\n    //   if (profiles.length > 0) {\r\n    //     profileItems = profiles.map(profile => (\r\n    //       <ProfileItem key={profile._id} \r\n    //       profile={profile} />\r\n    //     ));\r\n    //   } else {\r\n    //     profileItems = <h4>No profiles found...</h4>;\r\n    //   }\r\n    // }\r\n\r\n    return (\r\n      <div className=\"profiles\">\r\n        <div className=\"container\">\r\n          {console.log(this.props.profile)}\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4 text-center\">Developer Profiles</h1>\r\n              <p className=\"lead text-center\">\r\n                Browse and connect with developers\r\n              </p>\r\n              {profileItems}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProfiles.propTypes = {\r\n  getProfiles: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfiles })(Profiles);\r\n"]},"metadata":{},"sourceType":"module"}