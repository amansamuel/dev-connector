{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aman\\\\Desktop\\\\Dev-connector\\\\client\\\\src\\\\components\\\\post\\\\PostForm.js\";\nimport React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\nimport TextAreaGroup from '../common/TextAreaGroup';\nimport { addPost } from '../../actions/postAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PostForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '',\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const {\n      user\n    } = this.props.auth;\n    const newPost = {\n      text: this.state.text,\n      name: user.name,\n      avatar: user.avatar\n    };\n    this.props.addPost(newPost);\n    this.setState({\n      text: ' '\n    });\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n      console.log(nextProps.errors.text);\n    }\n  }\n\n  render() {\n    const {\n      errors\n    } = this;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feed\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-12\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-form mb-3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card card-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-header bg-info text-white\",\n                  children: \"Say Something...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body\",\n                  children: /*#__PURE__*/_jsxDEV(\"form\", {\n                    onSubmit: this.onSubmit,\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group\",\n                      children: [/*#__PURE__*/_jsxDEV(TextAreaGroup, {\n                        name: \"text\",\n                        value: this.state.text,\n                        placeholder: \"Create Post\",\n                        onChange: this.onChange,\n                        errors: errors\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 57,\n                        columnNumber: 33\n                      }, this), console.log(this.errors)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 56,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"submit\",\n                      className: \"btn btn-dark\",\n                      children: \"Submit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 67,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 55,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\naddPost.propTypes = {\n  addPost: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  addPost\n})(PostForm);","map":{"version":3,"sources":["C:/Users/aman/Desktop/Dev-connector/client/src/components/post/PostForm.js"],"names":["React","Component","PropTypes","connect","TextAreaGroup","addPost","PostForm","constructor","props","state","text","errors","onChange","bind","onSubmit","e","preventDefault","user","auth","newPost","name","avatar","setState","target","value","componentWillReceiveProps","nextProps","console","log","render","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport {PropTypes} from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport TextAreaGroup from '../common/TextAreaGroup';\r\nimport { addPost } from '../../actions/postAction';\r\nclass PostForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            text:'',\r\n            errors:{}\r\n        }\r\n        this.onChange=this.onChange.bind(this);\r\n        this.onSubmit=this.onSubmit.bind(this);\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const {user} = this.props.auth;\r\n       \r\n        const newPost ={\r\n            text:this.state.text,\r\n            name:user.name,\r\n            avatar:user.avatar\r\n        }\r\n        this.props.addPost(newPost);\r\n        this.setState({text : ' '});\r\n       \r\n    }\r\n    onChange(e) {\r\n       \r\n         this.setState({[e.target.name] : e.target.value})\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if(nextProps.errors) {\r\n            this.setState({errors:nextProps.errors});\r\n            console.log(nextProps.errors.text)\r\n        }\r\n    }\r\n\r\n    render() {\r\n       const {errors} =this\r\n        return (\r\n            <div className=\"feed\">\r\n                <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                    <div className=\"post-form mb-3\">\r\n                        <div className=\"card card-info\">\r\n                        <div className=\"card-header bg-info text-white\">\r\n                            Say Something...\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={this.onSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <TextAreaGroup \r\n                                name=\"text\"\r\n                                value={this.state.text}\r\n                                placeholder=\"Create Post\"\r\n                                onChange={this.onChange}\r\n                                errors={errors}\r\n                                />\r\n                                {console.log(this.errors)}\r\n                                {/* <textarea className=\"form-control form-control-lg\" placeholder=\"Create a post\"></textarea> */}\r\n                            </div>\r\n                            <button type=\"submit\" className=\"btn btn-dark\">Submit</button>\r\n                            </form>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    {/* <div className=\"posts\">\r\n                    \r\n                        <div className=\"card card-body mb-3\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-2\">\r\n                            <a href=\"profile.html\">\r\n                                <img className=\"rounded-circle d-none d-md-block\" src=\"https://www.gravatar.com/avatar/205e460b479e2e5b48aec07710c08d50?s=200\"\r\n                                alt=\"\" />\r\n                            </a>\r\n                            <br />\r\n                            <p className=\"text-center\">John Doe</p>\r\n                            </div>\r\n                            <div className=\"col-md-10\">\r\n                            <p className=\"lead\">Lorem ipsum dolor sit amet consectetur adipisicing elit. Sint possimus corporis sunt necessitatibus! Minus\r\n                                nesciunt soluta suscipit nobis. Amet accusamus distinctio cupiditate blanditiis dolor? Illo perferendis\r\n                                eveniet cum cupiditate aliquam?</p>\r\n                            <button type=\"button\" className=\"btn btn-light mr-1\">\r\n                                <i className=\"text-info fas fa-thumbs-up\"></i>\r\n                                <span className=\"badge badge-light\">4</span>\r\n                            </button>\r\n                            <button type=\"button\" className=\"btn btn-light mr-1\">\r\n                                <i className=\"text-secondary fas fa-thumbs-down\"></i>\r\n                            </button>\r\n                            <a href=\"post.html\" className=\"btn btn-info mr-1\">\r\n                                Comments\r\n                            </a>\r\n                            <button type=\"button\" className=\"btn btn-danger mr-1\">\r\n                                <i className=\"fas fa-times\" />\r\n                            </button> \r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n\r\n                    </div> */}\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\naddPost.propTypes={\r\n    addPost:PropTypes.func.isRequired,\r\n    auth:PropTypes.object.isRequired,\r\n    errors:PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps =(state) =>({\r\nauth:state.auth,\r\nerrors:state.errors\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, {addPost})(PostForm);"]},"metadata":{},"sourceType":"module"}